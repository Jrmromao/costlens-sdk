name: Publish to npm

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (optional)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      id-token: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Build
        run: npm run build
      
      - name: Check if package exists
        id: check-package
        run: |
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          PACKAGE_VERSION=$(node -p "require('./package.json').version")
          echo "name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          echo "version=$PACKAGE_VERSION" >> $GITHUB_OUTPUT
          echo "Checking if $PACKAGE_NAME@$PACKAGE_VERSION exists on npm..."
          if npm view $PACKAGE_NAME@$PACKAGE_VERSION version > /dev/null 2>&1; then
            echo "exists=true" >> $GITHUB_OUTPUT
            echo "Package $PACKAGE_NAME@$PACKAGE_VERSION already exists on npm"
          else
            echo "exists=false" >> $GITHUB_OUTPUT
            echo "Package $PACKAGE_NAME@$PACKAGE_VERSION does not exist on npm"
          fi
      
      - name: Publish to npm
        if: steps.check-package.outputs.exists == 'false'
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
      
      - name: Skip publish (already exists)
        if: steps.check-package.outputs.exists == 'true'
        run: echo "Skipping publish - package already exists on npm"
      
      - name: Create GitHub Release Notes
        uses: actions/github-script@v7
        with:
          script: |
            const release = context.payload.release;
            const packageName = '${{ steps.check-package.outputs.name }}';
            const packageVersion = '${{ steps.check-package.outputs.version }}';
            
            if (release && release.tag_name) {
              console.log(`âœ… Published ${packageName}@${packageVersion} to npm!`);
              console.log(`ðŸ“¦ Release: ${release.tag_name}`);
            } else {
              console.log(`âœ… Published ${packageName}@${packageVersion} to npm!`);
              console.log('ðŸ“¦ Manual deployment completed');
            }
